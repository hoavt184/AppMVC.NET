@using Microsoft.EntityFrameworkCore
@using System.Data

@inject AppDbContext dbContext
@{
    ViewData["Title"] = "Thong tin DB";
    var connect = dbContext.Database.GetDbConnection();
    var dbName= connect.Database;
    var can_connect = dbContext.Database.CanConnect();

    @* dbContext.Database.GetPendingMigrations(); *@
    @* dbContext.Database.get *@
}

<partial name="_AlertMessage"/>

<h1>Thong tin</h1>
<p>Database: @dbName</p>
<p>Source: @connect.DataSource</p>
<p>State: @connect.State</p>


<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}
@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>
}

@if(!can_connect){
    <p class="alert alert-danger">Khon the ket noi database</p>
}

@if(dbContext.Database.GetPendingMigrations().Any()){
    <form method="POST">

    <button class="btn btn-success" asp-action="Migrate">Tao database</button>

    </form>
}

@if(can_connect){
    <h2>Cac table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (System.Data.DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>
   
   <a class="btn btn-danger" asp-action="DeleteDb">Xoa database: @dbName</a>
}